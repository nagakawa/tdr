# ########## Project setup ##########
CMAKE_MINIMUM_REQUIRED(VERSION 3.9)
CMAKE_POLICY(SET CMP0048 NEW)
CMAKE_POLICY(SET CMP0069 NEW)
PROJECT(tdr VERSION 0.1)

# ######### General setup ##########
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR})

set(CMAKE_BINARY_DIR ${CMAKE_BINARY_DIR}/build)

set(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR})
set(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR})

set(PROJECT_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/include)

include_directories("${PROJECT_INCLUDE_DIR}")
include_directories("${PROJECT_SOURCE_DIR}")

ADD_CUSTOM_COMMAND(
  OUTPUT 3rdparty/agc/kozet_coroutine/build/libkozet_coroutine.a
  COMMAND make
  WORKING_DIRECTORY 3rdparty/agc/kozet_coroutine/
)

IF ("${CMAKE_BUILD_TYPE}" MATCHES "Release")
  INCLUDE(CheckIPOSupported)
  CHECK_IPO_SUPPORTED(RESULT SUPPORTED OUTPUT ERROR)
  IF (SUPPORTED)
    MESSAGE(STATUS "IPO / LTO enabled")
    SET(CMAKE_INTERPROCEDURAL_OPTIMIZATION TRUE)
  ELSEIF ("${CMAKE_CXX_COMPILER_ID}" MATCHES "Clang")
    MESSAGE(STATUS "IPO / LTO enabled (Clang)")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -flto")
    SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -flto")
    SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -flto")
  ELSE ()
    MESSAGE(STATUS "IPO / LTO disabled: ${ERROR}")
  ENDIF ()
ELSE ()
  MESSAGE(STATUS "Debug build -- no IPO / LTO")
ENDIF ()

# dependencies
ADD_SUBDIRECTORY(3rdparty/msdfgen)

ADD_SUBDIRECTORY(FileUtil)
ADD_SUBDIRECTORY(AGL)
ADD_SUBDIRECTORY(AGLTest)
ADD_SUBDIRECTORY(TDR)
ADD_SUBDIRECTORY(TDRTest)

# actual target:
# ADD_LIBRARY(tdr ${tdr_library}_SRCS ${tdr_library_HDRS})
# SET_TARGET_PROPERTIES(tdr PROPERTIES VERSION 0.0.0)

# add install target:
# INSTALL(TARGETS tdr DESTINATION lib)
